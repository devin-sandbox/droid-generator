Input

Type

Default

Description

noteshift (nos)

1 2 3

0

Shifts the resulting output note(s) by this number of scale notes up or down (if negative). So the output note still is
part of the scale but may be a note that is none of the selected ones. The maximum shift range is limited to -24 … +24.

selectnoteshift (sns)

1 2 3

0

Shifts the output note by this number of selected scale notes up or down (if negative). If you use noteshift at the
same time, first selectnoteshift is applied, then noteshift. The maximum shift range is limited to -24 … +24.

off

While this is 1, the circuit will output the value set by tuningpitch instead of the actual pitch. This is ment to be a
help for tuning your VCOs.

tuningmode (tm)

tuningpitch (tp)

1V
Oct

0V

This pitch CV will be output while the tuning mode is active.

transpose (tr)

1V
Oct

0V

This value is being added to the output pitch when not in tuning mode. It can be used for musical transposition or
adding a vibrato.

Output
output (o)
notechange (n)

DROID manual for blue-6

Type
1V
Oct

Description
Here comes your quantized output voltage
Whenever the quantization changes to a new note a trigger with the duration 10 ms is output here. No trigger is output
in bypass mode.

284

Table of contents at page 2

16.43

mixer – CV mixer

The main task of this circuit is simply
adding up to eight inputs. Furthermore
it can do simple operations like minimum,
maximum and average. Please note that
since every input can always be offset and
attenuated, it’s like a mixer with a CV controlled level and
CV controlled offset per input channel.

[mixer]

Type

input1 ... input8 (i)

Output

Type

Since every input can add an offset, mixing four inputs
can be done with two lines if you like:
[mixer]
input1 = I1 + I2
input2 = I3 + I4
output = O1

Minimal example, mixing together two inputs:

Input

Please note that an unpatched input is (sometimes) not
the same as an input where 0.0 is being sent. The difference arises if you use minimum, maximum and average,
since these just consider the patched inputs.

input1 = I1
input2 = I2
output = O1

Default

Description

0.0

1st ... 8th mixing input

If eight inputs are not enough then you can simply create
a mesh by mixing together the outputs of several submixers.

Description

output (o)

Sum of all patched inputs

maximum (x)

Maximum of all patched inputs of this circuit. This can e.g. be used for mixing together the envelopes from several
sequencer tracks without making them “louder” or distorting them when two sequencers play a note at the same time.

minimum (m)

Minimum of all patched inputs of this circuit.

average (a)

Average of all patched inputs of this circuit.

DROID manual for blue-6

285

Table of contents at page 2

16.44

motoquencer – Motor fader sequencer

This circuit allows you to build simple
but also very complex performance sequencers based on motorized faders. It
supports up to 32 steps and up to eight M4
controllers with up to 32 faders. The list of
features is long and diverse and aims at supporting creative live performances.
You probably will fail to map all existing inputs to controls, so better don’t try and rather experiment with just
a fraction of those at a time.

Basic minimal example
Despite all the features, this sequencer is easy to get
started with. Here is the smallest possible example. You
always need a clock input. Here I get it from input I1.
You need to have at least one M4 unit attached to your
(and declared with [m4] in your patch). The motor sequencer automatically conﬁgures all your available
faders (up to 32) for the sequencer (you can change that
with firstfader and numfaders):
[m4]
[motoquencer]
clock = I1
cv = O1
gate = O2

As soon as your clock starts, you get a sequence with one
step per available fader (which is four if you have just one
[m4] declared). The faders select notes from a C lydian
scale in two octaves. You will feel 15 notches. They correspond to the 15 notes in this range. The touch buttons
below the faders switch on/off the gates.
DROID manual for blue-6

The pitch is output at O1 and the gate at O2. Well –
this wouldn’t have needed expensive motor faders, but it
works and shows a minimal application of motoquencer.

page = _PAGE
numsteps = 16
cv = O1
gate = O5

Switching pages
Your sequence can have more steps than you have faders.
This is done by switching pages. In the following example we assume that you have just one M4 but want a sequencer with 16 steps. Use the page input in order to set
the current page (group of 4 steps) that you want to see
and edit with your faders. These pages have the numbers 0, 1, 2 and 3. That number can nicely be output by
a buttongroup (see page 146) on a P2B8. Here is a fully
functional example of a 16 step sequencer with just four
faders:
[p2b8]
[m4]
[buttongroup]
button1 = B1.1
button2 = B1.2
button3 = B1.3
button4 = B1.4
led1 = L1.1
led2 = L1.2
led3 = L1.3
led4 = L1.4
output = _PAGE

Repeats, Ratchets and Randomize
In the upper examples we just had two parameters per
step of the sequence: The pitch / CV and the gate. There
are some more. Altogether every step has the following
eight parameters:
0

pitch / CV

1

randomize CV

2

gate propability

3

repeats (up to 16)

4

gate pattern

5

ratchets (up to 8)

6

gate

7

skip

Each of these parameters has a number from 0 to 7 and
you can set the input fadermode to one of these in order
to switch the faders to control that parameter. Here are
some details about the various parameters:
Pitch / CV is the output pitch of each step. With the inputs cvbase and cvrange you can deﬁne a voltage range
for those CVs. Per default, the CV is quantized to a musical scale, but you can change that with quantize (see
below).

[lfo]
hz = 20 * P1.1
square = _CLOCK
[motoquencer]
clock = _CLOCK

286

Table of contents at page 2

