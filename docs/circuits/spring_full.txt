Input

Type

Default

Description
Wire the CV that you wish to slew limit here.

input (i)
slew (sw)

1.0

This controls the slew rate. A value of 0.0 disables slew limiting. The output immediately follows the input without
any delay. A value of for example 2.0 in linear mode means that 2.0 seconds are needed for a change of 1 V (which is
a value of 0.1 or one octave if used as pitch). In the other two modes the slew time is tuned to sound similar. Negative
values of this parameter are treated as 0.0.

slewup (u)

1.0

This allows a special handling when the voltage moves upwards. The slew limiting for upwards is slew multiplied
with slewup. Since slew defaults to 1.0 you can just use slewup and slewdown if you want to control both directions
separately.

slewdown (d)

1.0

Sets the slew rate for downwards movement.

gate (g)

+

Output

Type

If this jack is patched, the slew limiting is only active while this gate is high. Otherwise it’s like setting the slew parameter to zero.

Description

exponential (e)

Output for the resulting CV with the exponential (classical) slew algorithm applied

linear (l)

Output for linear slew limiting

scurve (c)

Output with the slew limitation according to the S-curve algorithm.

DROID manual for blue-6

356

Table of contents at page 2

16.64

spring – Physical spring simulation

A physical simulation of a mass hanging
from on an ideal spring which can create interesting “bouncing” CV sources.
Consider the following drawing:

Now, this could be done more easily with the LFO circuit
(see page 239). But it’s getting interesting when you look
at the other parameters and the modulation possibilities.
Please look at the table of jacks for details.

0.00

Friction

0.25

0.50

0.75

1.00

springforce
mass
gravity

Without any further parameters the mass starts at position 0.00 and velocity 0.00 and is accelerating downwards until the force of the spring equals the gravity. At
this point it decelerates until the velocity is zero. Now
the mass is being accelerated upwards until it reaches the
top position at 0.00 again. This results, in essence, to a
damped sine wave.
The position and velocity are available at their respective outputs ready to be used for modulation.

DROID manual for blue-6

Shoving

[spring]
position = O1
velocity = O2

Per default the motion is without any friction and thus the
mass will move up and down forever. You can apply two
different types of friction. flowresistance is the type
of friction a body has in a liquid or gas. Its force is relative to its velocity. Whereas the normal friction force
is constant.
When you use any type of friction, the spring will ﬁnally
stop swinging. You need to either shove it from time to
time or reset it to its start with the reset trigger input.

You also can shove the mass downwards or upwards. As
long as you send a gate signal into shove the mass will
be shoved downwards. The exact force can be set with
shoveforce and defaults to being the same as the gravity. A negative value will lift the mass upwards.
Setting shove to a constant 1 value will steadily apply
shoveforce, which can be interesting as that is itself a
changing CV (some LFO, feedback loop or whatever).

The physical model
Please note that the physical model is normalized in a way
such that every parameter is 1. For example the mass is
N
N
. The force of the spring is 1 m
.
1kg and the gravity is 1 kg
In order to avoid anomalies or inﬁnities, the velocity of
the mass is limited to ±10 m
s and the position is limited
to the range of ±10 m.

The following example will create a slowly decaying sine
wave, which is restarted whenever a trigger is sent to
reset:
[spring]
flowresistance = 0.5
reset = I1
position = O1
velocity = O2

357

Table of contents at page 2

Input

Type

Default

Description

mass (m)

1.0

The mass of the object on the spring. The heavier it is, the farther the spring will move up and down.

gravity (g)

1.0

The gravity of the simulated planet the spring is mounted at. If you set the gravity to zero, the mass will move exactly
around the zero position from positive to negative and back. But you need to shove it or set a start position other than
0, in order to get it started.

springforce (f)

1.0

The force of the string per m it is stretched. In an ideal spring the force is proportional to the current elongation.

flowresistance (fr)

0.0

Setting this to a value > 0 will dampen the oscillation in a way, that higher velocities will be damped more then slower
ones. This means that impact of the friction will get less and less as time goes by and the movement slows down.

friction (fi)

0.0

Setting this to a value > 0 will also dampen the oscillation, but in a way that is independent of the current speed of
the mass.

speed (sp)

0.0

This parameter speeds up or slows down the perceived time. It works on a 1V/Oct base. Every positive 1V (or 0.1)
doubles the speed. So if you set speed to 2V or 0.2 it will speed up the movement by a factor of 4. An input of -1V will
slow down the movement to the half.

shove (sh)

0

While this gate input is logical 1, an extra force of 1 N is applied to the mass pointing downwards. You can change that
force with shoveforce.

shoveforce (sf)

1.0

This is the force being applied to the mass while shove is active
Resets the whole system to its start position.

reset (r)
startvelocity (sv)

0.0

Sets the velocity the mass has which

starts of a reset is triggered

startposition (spo)

0.0

Sets the position the spring has which

starts of a reset is triggered

Output

Type

Description

velocity (v)

Outputs the current velocity of the mass

position (p)

Output the current length of the string. If the string goes upwards (which is possible with certain modulations), this
can be negative.

DROID manual for blue-6

358

Table of contents at page 2

