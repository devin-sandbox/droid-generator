16.57

random – Random number generator

A random number generator with clocked
and unclocked mode, that can either create
voltages at discrete steps and completely
free values.

the maximum possible speed (about 6000 times per second).
Simple example for clocked random numbers between
0.0 and 1.0 (1.0 translates into 10 V at the output):

This circuit creates random numbers between two tunable levels minimum and maximum. In
clocked mode each clock creates and holds a new random
value. In unclocked mode the random values change at

Input

Type

Default

[random]
clock
output

= I1
= O1

Example for creating random output voltages between
1 V and 3 V:
[random]
clock
= I1
output = O1
minimum = 1V
maximum = 3V

Description
Optional triggger: if this input is used then the output holds the current random number until the next clock impulse
(sample & hold)

clock (c)

minimum (m)

0.0

Minimum possible random number

maximum (x)

1.0

Maximum possible random number

0

Number of different voltage levels. If this is set to 0 (default), any voltage can appear, there is no limit. If this is 1,
then there is no random any more since there is only one allowed step (which is the average between minimum and
maximum. At 2 the only two possible output values are minimum and maximum. At 3 the possible levels are minimum,
minimum+maximum and maximum and so on...
2

steps (s)

1 2 3

Output

Type

output (o)

DROID manual for blue-6

Description
Output of the random number / voltage

340

Table of contents at page 2

16.58

recorder – Record and playback CVs und gates

Record and playback the movement of one
CVs, eight gates and one integer numbers
in the range 0 to 255, with permanent storage on the SD card.
Note: This circuit is still experimental. In a future firmware
version it might be changed or removed. Also the file format on the SD card for the saved recordings might change
and a new version might not be able to load old recordings.

the output but at the same time written to the tape. Stop
the recording either by pressing the stop button B1.3 or
record again.
Note: For your ﬁrst experiments you might want to use
the value of a pot as input CV. Then you can record your
pot movements:
[recorder]
cvin = P1.1 # record pot P1.1

[recorder]
cvin = I1
cvout = O1
record = B1.1
play = B1.2
stop = B1.3
recordled = L1.1
playled = L1.2
stopled = L1.3
pause = L1.4

Basic usage
The typical interface to the recorder is to use the three
buttons “Record”, “Play” and “Stop”. The stop button is
optional if you are low in buttons. Here is a simple example patch for recording a CV:
[p2b8]
[recorder]
cvin = I1
cvout = O1
recordbutton = B1.1
playbutton = B1.2
stopbutton = B1.3
recordled = L1.1
playled = L1.2
stopled = L1.3

Now feed some CV into I1. The circuit starts in idle /
stopped mode and L1.3 is lit. In that mode the input is
bypassed to the output, so that you can “hear” the effects
of the CV at I1.
When you press the record button (B1.1), the recording
starts and L1.1 becomes lit. The input is still bypassed to
DROID manual for blue-6

You can now play the recording by hitting B1.2. The LED
in that button is lit to indicate that the playback is going
on. During playback the signal at I1 is ignored and instead the tape’s content is sent to O1. The playback stops
when the recording has played completely or when you
hit the stop button. Hitting the play button during playback does not stop it but immediately restarts it from the
beginning.

When you enable pause during playback, the playback
is hold and the output sticks at the current CV. Disable
pause to go on with the playback.

Sharing the three buttons with other circuits can be done
with the select input – just as usual.

Looping

When you enable pause while recording, the tape stops
and the input CV is no longer recorded. But you can resume the recording later by disabling pause.

The recorder has a simple loop function builtin. When
you set the input loop to 1, a playback immediately starts
again when it’s ﬁnished.

Pausing
The pause input allows you to pause the tape. This input
is different from the three buttons as it does not expect
a trigger but a gate (a state). You can use a button (see
page 141) circuit for that:

If looping is your main objective, please have a look at
cvlooper (see page 174). That circuit has some very useful features for a real performance looper.

Playback speed
[p2b8]

With the parameter playbackspeed you can alter the
speed of the playback. The default value is 1. A value of 2
doubles the speed speed. The fun part: you even can use

[button]
button = B1.4
led = L1.4

341

Table of contents at page 2

a negative speed for running the tape backwards. In that
case a press to the play button starts the playback at the
tape end.
The following example maps the speed to a pot that’s
scaled to a range from -5 to 5 (ﬁve times speed backwards
to ﬁve times speed forwards). The center position sets
the speed to 0 and stops the tape.
[recorder]
playbackspeed = P1.1 * 10 - 5
...

Scrubbing
Scrubbing is a special playback mode that’s enabled by
scrub = 1. During scrubbing no linear playback is done.
Instead, you select a position on the tape with the input
CV scrubposition. Example:
[button]
button = B1.5
led = L1.5
[recorder]
scrub = L1.5
scrubposition = P1.1
...

While the button B1.5 is enabled, the recorder outputs
the CV that’s at the position that P1.1 selects. The left
position of the pot (or the value 0) selects the start of the
recording, the right position (1) the end.
While scrub is 1, the current state (play, record, stop) of
the recorder is ignored. It is in scrub mode. The playled
output is 1, the other LED outputs are 0.
DROID manual for blue-6

Trimming the start and end
The two inputs trimstart and trimend range from 0 to
1 and limit of the portion of the recording that is used for
playback or scrubbing. For example trimstart = 0.1
and trimend = 0.8 disables the ﬁrst 10% and the last
20% of the recording.
If you map the trimming positions to two pots you can
manually select a portion. Just make sure that you start
with the timstart pot fully left and trimright fully
right:
[recorder]
trimstart = P1.1
trimend = P1.2
...

Unlike cvin and cvout the gate tracks on the tape just
distinguish between 0 and 1.
In addition you can record one discrete integer number
from 0 to 255:
[recorder]
numberin = I1
numberout = O1
...

Unlike with the CV, no linear interpolation is done for
these integer numbers. Every time the input number
changes a new sample is created.
Applications for recording a number could be chord progressions or melodies that are represented by note numbers rather than pitch CVs.

This limitation is not permanent. The recording itself is
not modiﬁed by using trimming.

Recording gates and numbers
Along the CV, the recorder also records the state of up to
eight input gates. You could record the output of a multitrack drum sequencer or even a manually tapped button
pattern with that:
[recorder]
gatein1 = I1
gatein2 = I2
gatein3 = I3
gatein4 = I4
gateout1 = O1
gateout2 = O2
gateout3 = O3
gateout4 = O4
...

Technical background and limitations
The two circuits recorder (see page 341) and delay (see
page 179) are based on the same implementation of a virtual tape. This virtual tape has three tracks with three
recording and playback heads:
1. One head for recording a continous CV in the range
−1 …+1 (which is −10 V …10 V)
2. One head for recording eight gate tracks in parallel
(CVs where just 0 and 1 is recorded)
3. One head for recording a discrete integer number
in the range 0 …255
All these are recorded in parallel, so for example it’s easy
to record a CV/gate signal with just one cvrecorder. The
discrete number is useful for recording the outputs of
buttongroup (see page 146) circuits or the switches on
the S10 similar things.

342

Table of contents at page 2

