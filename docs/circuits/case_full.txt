16.9

case – Switch choosing from inputs via conditions

This circuit selects one of several inputs
and routes its signal to the output based
on which of several conditions is true. For
each signal there is one related case input.
The ﬁrst signal whose case input is nonzero, is selected.

is an internal cable that is 1 if that clock is present, and 0
otherwise:

One example application is selecting one out of several
clock sources, depending on which clock is present. In
this example we assume that for each clock source there

Input

Type

Default

[case]
case1 = _INTERNAL_CLOCK_PRESENT
value1 = _INTERNAL_CLOCK
case2 = _EXTERNAL_CLOCK_PRESENT
value2 = _EXTERNAL_CLOCK
case3 = _MIDI_CLOCK_PRESENT
value3 = _MIDI_CLOCK
output = _CLOCK

The order of the values is important here, since it
deﬁnes the precedence of the individual inputs. If
_INTERNAL_CLOCK_PRESENT is non-zero, input1 is
copied to output, regardless of what happens at the
other inputs.
If none of the switch inputs is non-zero, 0 is output, but
you can set a different fallback value with the input else.

Description

case1 ... case16 (c)

1st ... 16th case input. The ﬁrst one that is non-zero deﬁnes which input value to use.

value1 ... value16 (v)

1st ... 16th value input. One of these is copied to the output, depending on which of the case inputs is none-zero.

else (e)

Output
output (o)

DROID manual for blue-6

0

Type

In case none of the case inputs is non-zero, this value is copied to the output.

Description
To this output the select value input is copied.

153

Table of contents at page 2

16.10

chord – Chord generator

This circuit creates the pitch information
for up to four voices of a musical chord.
This means that you can attach the Volts
per octave inputs of up to four synth voices
and they will play a nice musical chord.
Hereby you have the ﬂexibility of building your chord out
of any of the seven notes of a selected scale. So you are
not limited to root, 3rd , 5th and 7th . The algorithm is
similar to that in the Sinfonion but has an adapted mode
for three voiced chords in addition.

Minimal example
Here is the most simple (and probably useless) example:
it will play a C major 7 chord, i.e. output the respective
pitch CVs for the notes C, E, G and B at the outputs O1,
O2, O3 and O4:
[chord]
output1 = O1
output2 = O2
output3 = O3
output4 = O4

Output O1 will be at 0 V, representing a C. Or course, if you
just have three voices, don’t use output4 and you will get
a C major triad.

Selecting root and scale
Most likely you do not want to play in C major all the time
(or even never!), so you can select the root note and the
scale with the inputs root and degree. Setting root to 2
and degree to 7, for example, will select D natural minor:
DROID manual for blue-6

[chord]
output1 = O1
output2 = O2
output3 = O3
output4 = O4
root
= 2
degree = 7

root ranges from 0 to 11 and and degree from 0 to 107.

You ﬁnd the complete table of all 108 scales on page 107.
But why the heck is that input named degree?? Well, it’s
a jargon from the Sinfonion and does make sense there in
some contexts. Please have a look into the manual of the
Sinfonion if you are interested!

Selecting the pitch of the notes
Per default all outputs are in the ﬁrst octave, i.e. in the
range 0 V ... 1 V. Per convention this is very low and probably sounds ugly. With the pitch input you can set the
minimum pitch of the lowest output chord note. In the
next example this is read from I1. So you could, for example, patch a sequencer here and have the chord outputs play a kind of four voiced melody:
[chord]
pitch = I1
output1 = O1
output2 = O2
output3 = O3
output4 = O4
root
= 2
degree = 7

154

The spread parameter controls the maximum pitch of the
highest output chord note. It is always relative to the
pitch of the lowest note plus one octave. So if spread is
1.5 V (or 0.15), for example, the maximum allowed distance between the lowest and the highest chord note is
2.5 octaves. As lowest note the chord generator places
the chord note that is nearest above the pitch input. As
highest note it places the one nearest to upper bound
of the allowed range and the remaining notes are distributed in between with the most equal spacing possible.

Selecting the chord notes
What makes the Sinfonion and also the harmonic circuits
stand apart from other modules is the ﬂexin the
ibility of note selection. So e.g. in C major, you are
not limited to playing the chord C/E/G/B. In fact you can
choose any subset from the currently selected scale.
For this there are seven inputs select1, select3, ...
select13 that select the notes of the current scale and
another ﬁve inputs selectfill1 ... selectfill5 that
select the notes not in the current scale. These 12 inputs
are binary inputs that expect either 0 or one 1. Each of
them selects one of the seven intervals of the scale for
being part of the chord. Here is a table of all these inputs
and the notes they would select in a C major or C minor
scale:

Table of contents at page 2

Input

interval

step

Cmaj

select1

root
3rd

I

C

C

III

E

E♭

V

G

G

VII

B

B♭

II

D

D

select11

9th = 2nd
11th = 4th

IV

F

F

select13

13th = 6th

VI

A

A♭

select3
select5
select7
select9

5th
7th

Cmin

One typical way to select these notes is with seven toggle buttons, which is then much like the Sinfonion does
it. Assign the output of each of the seven buttons to one
of these functions:
[p2b8]
[button]
button = B1.1
led = L1.1
[button]
button = B1.2
led = L1.2
[button]
button = B1.3
led = L1.3
[button]
button = B1.4
led = L1.4
[button]
button = B1.5
led = L1.5
[button]
button = B1.6
led = L1.6

DROID manual for blue-6

[button]
button = B1.7
led = L1.7

even just two of the outputs, if you don’t need or have a
total of four voices.

[chord]
select1 = L1.1
select3 = L1.2
select5 = L1.3
select7 = L1.4
select9 = L1.5
select11 = L1.6
select13 = L1.7
output1 = O1
output2 = O2
output3 = O3
output4 = O4

Chord inversion
The chord generator lets you nail down the chord structure to a certain inversion. If you set inversion to 1, the
root note (or, to be more precise, the ﬁrst selected note)
will be placed as the lowest note. Similarly the inversions
2, 3 and 4 will make the respective other selected notes
the lowest note.
Setting inversion to 0 (which is the default) will allow
any note to be the lowest. This allows the chord to be
closest to the pitch input.

Now you can use the buttons to change the chord notes
on the ﬂy. Of course, however, you also can use other signals for the selection. Maybe random gates, slowly running LFOs, a sequencer, whatever you like!

Triggered mode

But what happens, if you do not select exactly four
notes?

The trigger input is essentially a sample & hold for the
outputs. So as soon as you patch that input, all outputs
are frozen until the next trigger.

• If you don’t select any note (or do not patch the
select-inputs at all), all scale notes are selected.
• If you select just one note, all four outputs will play
that same note.
• If you select two notes, output1 and output3 will
play the ﬁrst note and output2 and output4 the
second one.
• If you select three notes, output4 will play the
same as output1.
• If you select ﬁve, six or seven notes, just the ﬁrst
four notes will be used.
If some of the notes are doubled and you use a large
enough spread, they will be placed at different octaves.

Chords with three voices
The chord generation circuit can also create chords
with just three output voices. Simply omit the output
output4. When it is not connected, the “three voice
mode” is activated:
[chord]
output1 = O1
output2 = O2
output3 = O3
root
= 2
degree = 7

By the way: It’s of course no problem to just use three or
155

Table of contents at page 2

