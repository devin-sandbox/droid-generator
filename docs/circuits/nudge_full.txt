Input

Type

Default

Description

button1 ... button12 (b)

Wire 12 buttons to these 12 inputs.

clock (c)

When you use this jack, all button presses are quantized in time to the next clock pulse arriving here. That makes it
easier to switch the note exactly in time.
Specify the note that should be selected when the Droid starts and no state is loaded, or when a trigger to clear or
clearall happened. This is an integer number from 0 to 11.

startnote (sn)

1 2 3

select (s)

1 2 3

+

selectat (sa)

1 2 3

+

preset (pr)

1 2 3

+

The select input allows you to overlay buttons and LEDs with multiple functions. If you use this input, the circuit will
process the buttons and LEDs just as if select has a positive gate signal (usually you will select this to 1). Otherwise
it won’t touch them so they can be used by another circuit. Note: even if the circuit is currently not selected, it will
nevertheless work and process all its other inputs and its outputs (those that do not deal with buttons or LEDs) in a
normal way.
This input makes the select input more ﬂexible. Here you specify at which value select should select this circuit.
E.g. if selectat is 0, the circuit will be active if select is exactly 0 instead of a positive gate signal. In some cases this
is more conventient.
This is the preset number to save or to load. Note: the ﬁrst preset has the number 0, not 1! For the whole story on
presets please refer to page 21. This circuit has 16 presets, so this number ranges from 0 to 15.

loadpreset (lp)

A trigger here loads a preset. As a speciality you can use the trigger for selecting a preset at the same time.

savepreset (sp)

A trigger here saves a preset.

clear (cl)

A trigger here loads the default start state into the circuit. The presets are not affected, unless you use direct preset
switching with the preset input and without triggers. And that case the current preset is also cleared.

clearall (ca)

A trigger here loads the default start state into the circuit and into all of its presets.

dontsave (dos)

Output

0

Type

semitone (st)

DROID manual for blue-6

Description
Wire the LEDs in the buttons to these 12 outputs.

led1 ... led12 (l)
output (o)

If you set this to 1, the state of the circuit will not saved to the SD card and not loaded from the SD card when the Droid
starts.

1 2 3
1V
Oct

Here you get a number from 0 to 11, according to the currently selected button.
Here you get the same as output, but divided by 120. When you patch this output to a CV output of the
O1, it will output the note as a semitone on a 1 V per octave scheme.

318

, like

Table of contents at page 2

Output
gate (g)

DROID manual for blue-6

Type

Description
This output is 1 as long as one of the buttons is held. You can use that together with the semitone output to use the
notebuttons as a CV/gate keyboard with 12 keys.

319

Table of contents at page 2

16.49

nudge – Modify a value in steps using two buttons

This small utility allows you to modify a
value up and down in ﬁxed steps using two
buttons. This value can be persistent so it
survives a power cycle.
Here is an example for a simple CV source
that outputs a value between -2 V and 2 V:

Another application might be to ﬁne tune an oscillator. Here you set the nudge steps (set by amount) a
lot smaller. Also it is allowed to leave out minimum and
maximum and thus make the possible range unrestricted.
1
Note: 1V / 1200 means essentially a step size of 1200
1
of an octave, which is 100 of a semitone, which is also
known as one cent:

Note: Here only one button is wired. In addition wrap is
set to 1, which means that after reaching the maximum
value, the next value will be the minimum value. Here
each press of the button B1.1 forwards the number of
beats in the matter 3 → 4 → 5 → 6 → 7 → 3 and so on...

Understanding the LEDs
[nudge]
minimum
= -2V
maximum
= 2V
amount
= 1V
buttonup
= B1.1
buttondown = B1.3
ledup
= L1.1
leddown
= L1.3
output
= O1

Note: If you press both buttons at the same time, the
value will be reset to its start value.

[nudge]
amount
= 1V / 1200
buttonup
= B1.1
buttondown = B1.3
ledup
= L1.1
leddown
= L1.3
output
= O1
offset
= I1

A third application could be a button for selecting a certain input number for – let’s say – an euclidean rhythm
pattern:

You can extend this into an octave switch by using the input offset, which will be added to the output:
[nudge]
minimum
= -2V
maximum
= 2V
amount
= 1V
buttonup
= B1.1
buttondown = B1.3
ledup
= L1.1
leddown
= L1.3
output
= O1
offset
= I1

If you now feed some V/Oct source, such as the pitch output of a sequencer, to I1, it will be shifted up and down
for up to two octaves.
DROID manual for blue-6

Vice versa by nudging the value above the center value
the buttondown LED will be off and the brightness of
the buttonup LED will gradually increase indicating how
much the value is set above this center value. It remains
maximally bright at the maximum.
And if the value is exactly in the middle between maximum
and minimum, both LEDs are maximally bright. Here you
have to have in mind that this must be exactly in the
middle. Of course, this only works if the distance between maximum and minimum is an exact odd number of
amounts.

[nudge]
amount = 1
buttonup = B1.1
ledup = L1.1
minimum = 3
maximum = 7
wrap = 1
output = _BEATS
[euklid]
clock
length
beats
output

By nudging the value below the center value the buttonup
LED will be off and the brightness of the buttondown LED
will gradually increase indicating how much the value is
set below this center value. It remains maximally bright
at the minimum.

= G1
= 16
= _BEATS
= G3

320

Table of contents at page 2

